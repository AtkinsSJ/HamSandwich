#!/bin/bash
# ./android - prepare an Android build then invoke gradle
set -euo pipefail

usage() {
	echo "Usage: $0 [<subcommand...>]"
	echo "    <project>            Build a debug .apk of a project."
	echo "    --install <project>  Install the .apk to a connected device."
	echo "    --logcat             Show HamSandwich logs from a device."
	echo "    --gradle [<...>]     Run a Gradle task directly."
	echo "Project can be \`--all\`."
	exit 1
}

premake_and_gradle() {
	./tools/build/sdl2-source.sh
	make --quiet build/android/build.gradle
	cd build/android
	gradle "$@"
}

# Default settings
TASK=packageDebug

# Read command-line arguments
while [ $# -ne 0 ]; do
	ARG="$1"; shift
	case "$ARG" in
		"--logcat")
			"$ANDROID_HOME"/platform-tools/adb logcat -s 'HamSandwich'
			;;
		"--gradle")
			premake_and_gradle "$@"
			exit
			;;
		"--install")
			TASK=installDebug
			;;
		"--all")
			premake_and_gradle "$TASK"
			exit
			;;
		-*)
			usage
			;;
		*)
			if [ "$PROJECT" ]; then
				# Exit if two projects were specified
				usage
			fi
			GAMEDIR="build/assets/$ARG"
			if [ ! -d "$GAMEDIR" ]; then
				./tools/build/extract-assets.sh "$ARG" "$GAMEDIR"
			fi
			premake_and_gradle "$ARG:$TASK"
			;;
	esac
done

usage
